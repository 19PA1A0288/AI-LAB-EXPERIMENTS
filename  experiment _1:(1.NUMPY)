{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of AIIT LAB 1",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyP5nxWQCzF5l72LkI/hieTa",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19PA1A0288/AI-LAB-EXPERIMENTS/blob/master/%20experiment%20_1%3A(1.NUMPY)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8wMy8bT0cmLo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-dapuNDkq_p3",
        "colab_type": "text"
      },
      "source": [
        " \n",
        "LAB EXPERIMENT NO: 1. Numpy                                                                \n",
        "  \n",
        " 1)Different ways to create a Numpy arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bHUyxvh5sBdr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "aba4d8e2-c81e-411a-a6b3-14399cee05f4"
      },
      "source": [
        " import numpy as np \n",
        "p=np.array([1,2,3])\n",
        "print(p)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1 2 3]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1QzlYG9ArRm_",
        "colab_type": "text"
      },
      "source": [
        "2) ADD,REMOVE, MODIFY array elements               \n",
        "        \n",
        "Add"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zgm44ehzgLRu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b55c73da-f581-4567-c730-beb67492c539"
      },
      "source": [
        " f=np.array([4,8,9])\n",
        "q=np.append(f,[6,5,8])\n",
        "print(q)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[4 8 9 6 5 8]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tn5clY34rqrX",
        "colab_type": "text"
      },
      "source": [
        "Remove"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y5YJMSLXgOY5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b2b0bb3a-5e37-4063-9e53-6f2fa0cb6731"
      },
      "source": [
        " c=np.delete(f,2)\n",
        "print(c)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[4 8]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BFX__L2gryjm",
        "colab_type": "text"
      },
      "source": [
        " Modify"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ui134f2zgmFy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "9e6f1729-f3c7-4a23-f055-b92a905b8066"
      },
      "source": [
        " c[c>5]=-1\n",
        "print(c)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 4 -1]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nVkaOqw0sF9R",
        "colab_type": "text"
      },
      "source": [
        "3) Arthematic operations on Numpy array"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BnWTWvkqgyBS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 727
        },
        "outputId": "94477695-2e15-49f9-e941-666482c56779"
      },
      "source": [
        " import numpy as np \n",
        "l=np.random.random((5,5))\n",
        "m=np.random.random((5,5))\n",
        "num_sum=np.add(l,m)\n",
        "num_diff=np.subtract(l,m)\n",
        "num_prod=np.multiply(l,m)\n",
        "num_quo=np.divide(l,m)\n",
        "num_mod=np.mod(l,m)\n",
        "num_pow=np.power(l,m)\n",
        "print(num_sum)\n",
        "print(num_diff)\n",
        "print(num_prod)\n",
        "print(num_quo)\n",
        "print(num_mod)\n",
        "print(num_pow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1.01620079 0.32885357 0.88487664 0.84761864 0.48277541]\n",
            " [1.21144188 1.12339024 0.98362445 0.99866593 1.50296738]\n",
            " [1.60363748 0.92750755 1.01061529 1.07433758 0.12612167]\n",
            " [1.47769939 0.78749843 1.12264592 1.29438248 0.82206766]\n",
            " [0.53077845 1.34206166 1.44019263 1.65380181 0.362553  ]]\n",
            "[[-3.65895036e-01  3.05662401e-01 -1.84043938e-02  5.73899896e-01\n",
            "  -5.79875193e-02]\n",
            " [-4.04457325e-01  1.79679079e-02  2.83015197e-01  3.88705549e-01\n",
            "   1.42250821e-01]\n",
            " [ 2.87252480e-01  7.67550916e-01  7.85720974e-01  6.89415077e-01\n",
            "   4.24182737e-02]\n",
            " [-7.32282787e-02  4.86339967e-01  5.71206877e-01 -1.56882800e-01\n",
            "   1.18750670e-01]\n",
            " [ 2.74799989e-01  1.56128551e-01  4.01519984e-01  1.76808424e-04\n",
            "   2.53407432e-01]]\n",
            "[[0.22469622 0.00367879 0.19566699 0.09727407 0.05742739]\n",
            " [0.32600143 0.3154207  0.22185486 0.21156041 0.55966891]\n",
            " [0.62228479 0.06778396 0.10099645 0.16972702 0.00352684]\n",
            " [0.54455827 0.0959068  0.23351414 0.41270345 0.16542338]\n",
            " [0.05155268 0.44418834 0.47823413 0.68376509 0.01680734]]\n",
            "[[ 0.47052147 27.360239    0.95924991  5.1933547   0.78553442]\n",
            " [ 0.49940278  1.03250868  1.80791168  2.27452719  1.20908222]\n",
            " [ 1.43642624 10.59698764  7.98746855  4.58209811  2.01353768]\n",
            " [ 0.90556842  4.22979443  3.07169546  0.78379859  1.33768747]\n",
            " [ 3.14705559  1.26330077  1.77314057  1.00021384  5.64347633]]\n",
            "[[3.25152877e-01 4.17718212e-03 4.33236124e-01 2.64624029e-02\n",
            "  2.12393948e-01]\n",
            " [4.03492279e-01 1.79679079e-02 2.83015197e-01 8.37253562e-02\n",
            "  1.42250821e-01]\n",
            " [2.87252480e-01 4.77460666e-02 1.11038031e-01 1.12031329e-01\n",
            "  5.66574993e-04]\n",
            " [7.02235553e-01 3.46022691e-02 1.97678386e-02 5.68749838e-01\n",
            "  1.18750670e-01]\n",
            " [1.88215312e-02 1.56128551e-01 4.01519984e-01 1.76808424e-04\n",
            "  3.51162950e-02]]\n",
            "[[0.46007555 0.98677602 0.68537797 0.95434816 0.65776643]\n",
            " [0.48032449 0.73342399 0.85213352 0.89445355 0.87559083]\n",
            " [0.96374906 0.98685633 0.98799603 0.97609726 0.90164916]\n",
            " [0.76024395 0.93432758 0.95522492 0.66399206 0.76704938]\n",
            " [0.8901316  0.84256733 0.95808389 0.85464918 0.93775042]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wW7eA9iSsWZy",
        "colab_type": "text"
      },
      "source": [
        " 4)slicing and iterating of numpy array"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eBqe1PWys3Bj",
        "colab_type": "text"
      },
      "source": [
        "Slicing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2P4S0pJ9g2Jg",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "39507e7f-a634-4eb2-e2fd-9af4fa92ab8f"
      },
      "source": [
        " import numpy as np \n",
        "arr=np.array([1,2,3,4,5,6,7])\n",
        "print(arr[1:5])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[2 3 4 5]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eYxhrbbUsw_Y",
        "colab_type": "text"
      },
      "source": [
        " iterating"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fzJ52RqNhAfj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 137
        },
        "outputId": "a5d398ab-6ffd-4d93-a6b5-219ad1735f0c"
      },
      "source": [
        " for x in arr:\n",
        "  print(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tt9RIpC3hZaH",
        "colab_type": "text"
      },
      "source": [
        " 5) matrix operations on numpy arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a_Q1xD1xhKfU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 120
        },
        "outputId": "c52cb2d8-5256-46b2-871e-d22bdfc8cfb6"
      },
      "source": [
        " import numpy as np \n",
        "s=np.array([[1,2],[3,4]])\n",
        "t=np.array([[5,6],[7,8]])\n",
        "print(np.add(s,t))\n",
        "print(np.subtract(s,t))\n",
        "print(np.divide(s,t))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 6  8]\n",
            " [10 12]]\n",
            "[[-4 -4]\n",
            " [-4 -4]]\n",
            "[[0.2        0.33333333]\n",
            " [0.42857143 0.5       ]]\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}